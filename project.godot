; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=5

[application]

config/name="ArtilleryRampage"
config/version="1.1.0"
run/main_scene="uid://br3ip0dg0a52d"
config/features=PackedStringArray("4.4", "Forward Plus")
boot_splash/bg_color=Color(0, 0, 0, 1)
boot_splash/show_image=false
config/icon="res://icon.svg"

[audio]

driver/output_latency.web=90

[autoload]

InternalSceneRoot="*res://intro/internal_scene_root.tscn"
GameEvents="*res://events/game_events.gd"
SceneManager="*res://utils/scene_manager.tscn"
RunOnce="*res://utils/run_once.gd"
ObjectUtils="*res://utils/object_utils.gd"
Collisions="*res://utils/collisions.gd"
Groups="*res://utils/groups.gd"
PhysicsUtils="*res://utils/physics_utils.gd"
AITypes="*res://controller/ai/ai_types.gd"
SpawnLimiterManager="*res://utils/SpawnLimiterManager.tscn"
RoundStatTracker="*res://levels/round/round_stat_tracker.tscn"
SaveStateManager="*res://utils/save_state_manager.gd"
PlayerUpgrades="*res://progression/player_upgrades.tscn"
UserOptions="*res://utils/user_options.tscn"
Difficulty="*res://progression/difficulty.tscn"
PlayerStateManager="*res://levels/round/player_state_manager.tscn"
PlayerAttributes="*res://progression/player_attributes.tscn"
StoryModeManager="*res://story/story_mode_manager.tscn"
DebugMenu="*res://addons/debug_menu/debug_menu.tscn"
GlobalXR="*res://xr/global_xr.tscn"
StartXR="*res://addons/godot-xr-tools/xr/start_xr.tscn"
XRToolsUserSettings="*res://addons/godot-xr-tools/user_settings/user_settings.gd"
XRToolsRumbleManager="*res://addons/godot-xr-tools/rumble/rumble_manager.gd"

[debug]

file_logging/enable_file_logging=true
file_logging/max_log_files=100

[display]

window/size/viewport_width=1280
window/size/viewport_height=720
window/stretch/mode="canvas_items"

[dotnet]

project/assembly_name="ArtilleryRampage"

[editor_plugins]

enabled=PackedStringArray("res://addons/debug_menu/plugin.cfg", "res://addons/documentation_regenerator/plugin.cfg", "res://addons/godot-xr-tools/plugin.cfg")

[global_group]

Destructible="Collision object that can be progressively destroyed such as terrain"
Unit="a controllable unit in the game like an artillery"
Damageable="Supports the \"take_damage\" function to affect the health of a unit and respond to collision queries"
Player="Player unit"
Bot="AI-controlled unit"
Collectible="Retrievable pickups--see Personnel"
Savable="Class that participates in save/load system"
DamageableRoot="Root node in the damageable or destructible tree - e.g. Terrain for TerrainChunk"
TerrainChunk="Class that can be used as a child in Terrain system. Allows for destructible and shatterable objects in addition to standard static TerrainChunk"
GameLevel="GameLevel node"
WobbleActivator="Activation node for the wobble damage mechanic"
StoryLevelState="Contains info about run and completed levels"
TrajectoryPreviewer="Weapon or Projectile, used to filter out in events etc"
RewardableOnDestroy="Tag for nodes that reward scrap or personnel when they are destroyed other than tanks"
Wind_Particles2D="CPUParticles2D that should be blown around by wind"
SimultaneousFire="Simultaneous Fire mode only feature"

[input]

aim_left={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":65,"key_label":0,"unicode":97,"location":0,"echo":false,"script":null)
, Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":4194319,"key_label":0,"unicode":0,"location":0,"echo":false,"script":null)
]
}
aim_right={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":68,"key_label":0,"unicode":100,"location":0,"echo":false,"script":null)
, Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":4194321,"key_label":0,"unicode":0,"location":0,"echo":false,"script":null)
]
}
shoot={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":32,"key_label":0,"unicode":32,"location":0,"echo":false,"script":null)
]
}
power_increase={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":87,"key_label":0,"unicode":119,"location":0,"echo":false,"script":null)
, Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":4194320,"key_label":0,"unicode":0,"location":0,"echo":false,"script":null)
]
}
power_decrease={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":83,"key_label":0,"unicode":115,"location":0,"echo":false,"script":null)
, Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":4194322,"key_label":0,"unicode":0,"location":0,"echo":false,"script":null)
]
}
fine_control={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":4194325,"key_label":0,"unicode":0,"location":0,"echo":false,"script":null)
]
}
cycle_prev_weapon={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":82,"key_label":0,"unicode":114,"location":0,"echo":false,"script":null)
]
}
cycle_next_weapon={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":70,"key_label":0,"unicode":0,"location":0,"echo":false,"script":null)
]
}
cycle_weapon_mode={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":71,"key_label":0,"unicode":103,"location":0,"echo":false,"script":null)
]
}
pause={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":4194305,"key_label":0,"unicode":0,"location":0,"echo":false,"script":null)
]
}

[layer_names]

2d_render/layer_1="Layer 1"
2d_render/layer_2="Terrain"
2d_render/layer_3="Terrain Shadow"
2d_physics/layer_1="Tank"
3d_physics/layer_1="Static World"
2d_physics/layer_2="Projectile"
3d_physics/layer_2="Dynamic World"
2d_physics/layer_3="Wall"
3d_physics/layer_3="Pickable Objects"
2d_physics/layer_4="Terrain"
3d_physics/layer_4="Layer 4"
2d_physics/layer_5="WorldBody"
2d_physics/layer_6="Floor"
2d_physics/layer_7="InvisibleWall"
2d_physics/layer_8="Hazard"
2d_physics/layer_9="Collectibles"
2d_physics/layer_10="ProjectileBlocker"
3d_physics/layer_17="Held Objects"
3d_physics/layer_18="Player Hand"
3d_physics/layer_19="Grab handles"
3d_physics/layer_20="Player Body"
3d_physics/layer_21="Pointable"
3d_physics/layer_22="Hand Pose Area"
3d_physics/layer_23="UI Objects"

[physics]

jolt_physics_3d/simulation/areas_detect_static_bodies=true

[rendering]

renderer/rendering_method="mobile"
limits/time/time_rollover_secs=300.0

[shader_globals]

game_time={
"type": "float",
"value": 0.0
}

[xr]

openxr/enabled=true
openxr/reference_space=2
openxr/extensions/debug_utils=1
shaders/enabled=true
